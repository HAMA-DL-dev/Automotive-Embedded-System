<?xml version="1.0"?>
<launch>
  <!-- CAMERA   -->
  <!-- <node name="csi_node" pkg="qcar"
          type="csinode.py" output="screen">      
  </node> -->
  <!-- <node name="rgbd_node" pkg="qcar"
          type="rgbdnode.py" output="screen">
  </node>  -->

  <!-- LIDAR   -->
  <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter" output="screen">
        <rosparam command="load" file="$(find perception)/config/filter_angle.yaml"/>
        <!-- <rosparam command="load" file="$(find perception)/config/filter_range.yaml"/> -->
  </node>

  <node type = "laser_scan_assembler" pkg="laser_assembler" name="my_assembler">
        <remap from="scan" to="tilt_scan"/>
        <param name = "max_scans" type="int" value = "400"/>
        <param name = "fixed_frame" type="string" value="laser" />
  </node>

  <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode">
  <param name="serial_port"         type="string" value="/dev/ttyTHS2"/>  
  <param name="serial_baudrate"     type="int"    value="115200"/>
  <param name="frame_id"            type="string" value="laser"/>
  <param name="inverted"            type="bool"   value="false"/>
  <param name="angle_compensate"    type="bool"   value="true"/>
  </node>

  <!-- <node pkg="perception" type="filter_scan.py"  name="lidar_filter" output="screen"></node>  -->
  <node pkg="perception" type="perception_node" name="LaserScan2PCD" output="screen"></node>


  <!-- CONTROL -->
  <!-- <node name="command_node" pkg="command" type="command_pub.py" output="screen"></node> -->
  <node name="control_node" pkg="control" type="pure_pursuit.py" output="screen"></node>    
  <node name="qcar_node" pkg="qcar" type="qcarnode.py" ></node>                  <!-- HW interface -->

  <!-- TFs -->
  <arg name="stp" default="static_transform_publisher"/>                
  <!--                                                              x           y        z           yaw         pitch      roll        parent      child -->   
  <node pkg="tf2_ros"   type="$(arg stp)" name="laser2rear" args= "0.0      -0.15      -0.21          0.0         0.0        0.0        laser       rear      "/>

  <!-- Show in Rviz   -->
  <arg name="model" default="$(find urdf_qcar)/urdf/qcar.urdf"/>
  <arg name="gui"   default="false"/>

  <param name = "robot_description" command="$(find xacro)/xacro $(arg model)"/>
  <node if="$(arg gui)" name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui"/>
  <node unless="$(arg gui)" name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

  <node name="rviz" pkg="rviz" type="rviz" args="-d /home/nvidia/ae_ws/visualize/demo.rviz"/>    


</launch>
